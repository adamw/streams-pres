akka-stream:

  /------\      /------\       /------\      /------\
  |Source|->-->-| Flow |->-*->-| Flow |->-->-| Sink |
  \------/      \------/       \------/      \------/

  => materialised to actors + each stage to a value

scalaz-stream:

  Process[F[_], T]
  - Process0[T] = Process[Nothing, T]
  - Process1[I, O]
  - Sink[F[_], O] = Process[F, O => F[Unit]]

  State machine: Await | Emit | Append | Halt
  + driver